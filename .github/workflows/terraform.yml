name: Terraform Plan and Apply

on:
  push:
    branches:
      - feature

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Login to Azure
      run: |
        az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} \
                 -p ${{ secrets.ARM_CLIENT_SECRET }} \
                 --tenant ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve

    # Step to capture Terraform output (Resource Group and AKS Cluster Name)
    - name: Capture Terraform Outputs
      id: outputs
      run: |
        echo "AKS_CLUSTER_NAME=$(terraform output -raw aks_cluster_name)" >> $GITHUB_ENV
        echo "RESOURCE_GROUP=$(terraform output -raw aks_resource_group)" >> $GITHUB_ENV

    # Step to get AKS credentials using Terraform outputs
    - name: Get AKS Credentials
      run: |
        az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} \
                               --name ${{ env.AKS_CLUSTER_NAME }} \
                               --admin

    # Install kubectl
    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3

    # Deploy application to AKS using Kubernetes manifests
    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s-manifests/deployment.yaml
        kubectl apply -f k8s-manifests/service.yaml
